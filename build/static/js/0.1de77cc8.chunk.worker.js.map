{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","app/resources/countryCoordinates.js","app/resources/stateCoordinates.js","app/resources/webWorker/scrubData.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_unsupportedIterableToArray","minLen","toString","slice","constructor","from","test","_slicedToArray","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","_defineProperty","obj","configurable","writable","_setPrototypeOf","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","Parent","args","Class","a","apply","instance","Function","arguments","_toConsumableArray","iter","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","target","Error","isError","message","stack","serialized","assign","ep","self","addEventListener","callback","ev","data","returnValue","path","id","type","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","transfer","Promise","resolve","catch","then","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","proxy","_target","requestResponseMessage","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","countryCoordinates","Albania","latitude","longitude","Algeria","Andorra","Angola","Anguilla","Antarctica","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Botswana","Brazil","Brunei","Bulgaria","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Croatia","Cuba","Cyprus","Czechia","Denmark","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Samoa","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe","Afghanistan","stateCoordinates","Alaska","Alabama","Arkansas","Arizona","California","Colorado","Connecticut","Delaware","Florida","Hawaii","Iowa","Idaho","Illinois","Indiana","Kansas","Kentucky","Louisiana","Massachusetts","Maryland","Maine","Michigan","Minnesota","Missouri","Mississippi","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Virginia","Vermont","Washington","Wisconsin","Wyoming","scrubData","rawData","EXCLUDED_REGIONS","fieldNames","countryRegion","provinceState","dataChunk","rawDatum","_date","_data","countryRegionFieldName","provinceStateFieldName","newDateData","dataRow","coordinates","county","date","confirmed","deaths","active","recovered"],"mappings":"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","file":"static/js/0.1de77cc8.chunk.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const countryCoordinates= {\r\n  Albania: {\r\n    latitude: 41,\r\n    longitude: 20,\r\n  },\r\n  Algeria: {\r\n    latitude: 28,\r\n    longitude: 3,\r\n  },\r\n  \"American Samoa\": {\r\n    latitude: -14.3333,\r\n    longitude: -170,\r\n  },\r\n  Andorra: {\r\n    latitude: 42.5,\r\n    longitude: 1.6,\r\n  },\r\n  Angola: {\r\n    latitude: -12.5,\r\n    longitude: 18.5,\r\n  },\r\n  Anguilla: {\r\n    latitude: 18.25,\r\n    longitude: -63.1667,\r\n  },\r\n  Antarctica: {\r\n    latitude: -90,\r\n    longitude: 0,\r\n  },\r\n  \"Antigua and Barbuda\": {\r\n    latitude: 17.05,\r\n    longitude: -61.8,\r\n  },\r\n  Argentina: {\r\n    latitude: -34,\r\n    longitude: -64,\r\n  },\r\n  Armenia: {\r\n    latitude: 40,\r\n    longitude: 45,\r\n  },\r\n  Aruba: {\r\n    latitude: 12.5,\r\n    longitude: -69.9667,\r\n  },\r\n  Australia: {\r\n    latitude: -27,\r\n    longitude: 133,\r\n  },\r\n  Austria: {\r\n    latitude: 47.3333,\r\n    longitude: 13.3333,\r\n  },\r\n  Azerbaijan: {\r\n    latitude: 40.5,\r\n    longitude: 47.5,\r\n  },\r\n  Bahamas: {\r\n    latitude: 24.25,\r\n    longitude: -76,\r\n  },\r\n  Bahrain: {\r\n    latitude: 26,\r\n    longitude: 50.55,\r\n  },\r\n  Bangladesh: {\r\n    latitude: 24,\r\n    longitude: 90,\r\n  },\r\n  Barbados: {\r\n    latitude: 13.1667,\r\n    longitude: -59.5333,\r\n  },\r\n  Belarus: {\r\n    latitude: 53,\r\n    longitude: 28,\r\n  },\r\n  Belgium: {\r\n    latitude: 50.8333,\r\n    longitude: 4,\r\n  },\r\n  Belize: {\r\n    latitude: 17.25,\r\n    longitude: -88.75,\r\n  },\r\n  Benin: {\r\n    latitude: 9.5,\r\n    longitude: 2.25,\r\n  },\r\n  Bermuda: {\r\n    latitude: 32.3333,\r\n    longitude: -64.75,\r\n  },\r\n  Bhutan: {\r\n    latitude: 27.5,\r\n    longitude: 90.5,\r\n  },\r\n  Bolivia: {\r\n    latitude: -17,\r\n    longitude: -65,\r\n  },\r\n  \"Bosnia and Herzegovina\": {\r\n    latitude: 44,\r\n    longitude: 18,\r\n  },\r\n  Botswana: {\r\n    latitude: -22,\r\n    longitude: 24,\r\n  },\r\n  \"Bouvet Island\": {\r\n    latitude: -54.4333,\r\n    longitude: 3.4,\r\n  },\r\n  Brazil: {\r\n    latitude: -10,\r\n    longitude: -55,\r\n  },\r\n  \"British Indian Ocean Territory\": {\r\n    latitude: -6,\r\n    longitude: 71.5,\r\n  },\r\n  Brunei: {\r\n    latitude: 4.5,\r\n    longitude: 114.6667,\r\n  },\r\n  Bulgaria: {\r\n    latitude: 43,\r\n    longitude: 25,\r\n  },\r\n  \"Burkina Faso\": {\r\n    latitude: 13,\r\n    longitude: -2,\r\n  },\r\n  Burundi: {\r\n    latitude: -3.5,\r\n    longitude: 30,\r\n  },\r\n  Cambodia: {\r\n    latitude: 13,\r\n    longitude: 105,\r\n  },\r\n  Cameroon: {\r\n    latitude: 6,\r\n    longitude: 12,\r\n  },\r\n  Canada: {\r\n    latitude: 60,\r\n    longitude: -95,\r\n  },\r\n  \"Cape Verde\": {\r\n    latitude: 16,\r\n    longitude: -24,\r\n  },\r\n  \"Cayman Islands\": {\r\n    latitude: 19.5,\r\n    longitude: -80.5,\r\n  },\r\n  \"Central African Republic\": {\r\n    latitude: 7,\r\n    longitude: 21,\r\n  },\r\n  Chad: {\r\n    latitude: 15,\r\n    longitude: 19,\r\n  },\r\n  Chile: {\r\n    latitude: -30,\r\n    longitude: -71,\r\n  },\r\n  China: {\r\n    latitude: 35,\r\n    longitude: 105,\r\n  },\r\n  \"Christmas Island\": {\r\n    latitude: -10.5,\r\n    longitude: 105.6667,\r\n  },\r\n  \"Cocos (Keeling) Islands\": {\r\n    latitude: -12.5,\r\n    longitude: 96.8333,\r\n  },\r\n  Colombia: {\r\n    latitude: 4,\r\n    longitude: -72,\r\n  },\r\n  Comoros: {\r\n    latitude: -12.1667,\r\n    longitude: 44.25,\r\n  },\r\n  \"Congo (Brazzaville)\": {\r\n    latitude: -1,\r\n    longitude: 15,\r\n  },\r\n  \"Congo (Kinshasa)\": {\r\n    latitude: 0,\r\n    longitude: 25,\r\n  },\r\n  \"Cook Islands\": {\r\n    latitude: -21.2333,\r\n    longitude: -159.7667,\r\n  },\r\n  \"Costa Rica\": {\r\n    latitude: 10,\r\n    longitude: -84,\r\n  },\r\n  \"C\\u00f4te d'Ivoire\": {\r\n    latitude: 8,\r\n    longitude: -5,\r\n  },\r\n  Croatia: {\r\n    latitude: 45.1667,\r\n    longitude: 15.5,\r\n  },\r\n  Cuba: {\r\n    latitude: 21.5,\r\n    longitude: -80,\r\n  },\r\n  Cyprus: {\r\n    latitude: 35,\r\n    longitude: 33,\r\n  },\r\n  Czechia: {\r\n    latitude: 49.75,\r\n    longitude: 15.5,\r\n  },\r\n  Denmark: {\r\n    latitude: 56,\r\n    longitude: 10,\r\n  },\r\n  Djibouti: {\r\n    latitude: 11.5,\r\n    longitude: 43,\r\n  },\r\n  Dominica: {\r\n    latitude: 15.4167,\r\n    longitude: -61.3333,\r\n  },\r\n  \"Dominican Republic\": {\r\n    latitude: 19,\r\n    longitude: -70.6667,\r\n  },\r\n  Ecuador: {\r\n    latitude: -2,\r\n    longitude: -77.5,\r\n  },\r\n  Egypt: {\r\n    latitude: 27,\r\n    longitude: 30,\r\n  },\r\n  \"El Salvador\": {\r\n    latitude: 13.8333,\r\n    longitude: -88.9167,\r\n  },\r\n  \"Equatorial Guinea\": {\r\n    latitude: 2,\r\n    longitude: 10,\r\n  },\r\n  Eritrea: {\r\n    latitude: 15,\r\n    longitude: 39,\r\n  },\r\n  Estonia: {\r\n    latitude: 59,\r\n    longitude: 26,\r\n  },\r\n  Ethiopia: {\r\n    latitude: 8,\r\n    longitude: 38,\r\n  },\r\n  \"Falkland Islands (Malvinas)\": {\r\n    latitude: -51.75,\r\n    longitude: -59,\r\n  },\r\n  \"Faroe Islands\": {\r\n    latitude: 62,\r\n    longitude: -7,\r\n  },\r\n  Fiji: {\r\n    latitude: -18,\r\n    longitude: 175,\r\n  },\r\n  Finland: {\r\n    latitude: 64,\r\n    longitude: 26,\r\n  },\r\n  France: {\r\n    latitude: 46,\r\n    longitude: 2,\r\n  },\r\n  \"French Guiana\": {\r\n    latitude: 4,\r\n    longitude: -53,\r\n  },\r\n  \"French Polynesia\": {\r\n    latitude: -15,\r\n    longitude: -140,\r\n  },\r\n  \"French Southern Territories\": {\r\n    latitude: -43,\r\n    longitude: 67,\r\n  },\r\n  Gabon: {\r\n    latitude: -1,\r\n    longitude: 11.75,\r\n  },\r\n  Gambia: {\r\n    latitude: 13.4667,\r\n    longitude: -16.5667,\r\n  },\r\n  Georgia: {\r\n    latitude: 42,\r\n    longitude: 43.5,\r\n  },\r\n  Germany: {\r\n    latitude: 51,\r\n    longitude: 9,\r\n  },\r\n  Ghana: {\r\n    latitude: 8,\r\n    longitude: -2,\r\n  },\r\n  Gibraltar: {\r\n    latitude: 36.1833,\r\n    longitude: -5.3667,\r\n  },\r\n  Greece: {\r\n    latitude: 39,\r\n    longitude: 22,\r\n  },\r\n  Greenland: {\r\n    latitude: 72,\r\n    longitude: -40,\r\n  },\r\n  Grenada: {\r\n    latitude: 12.1167,\r\n    longitude: -61.6667,\r\n  },\r\n  Guadeloupe: {\r\n    latitude: 16.25,\r\n    longitude: -61.5833,\r\n  },\r\n  Guam: {\r\n    latitude: 13.4667,\r\n    longitude: 144.7833,\r\n  },\r\n  Guatemala: {\r\n    latitude: 15.5,\r\n    longitude: -90.25,\r\n  },\r\n  Guernsey: {\r\n    latitude: 49.5,\r\n    longitude: -2.56,\r\n  },\r\n  Guinea: {\r\n    latitude: 11,\r\n    longitude: -10,\r\n  },\r\n  \"Guinea-Bissau\": {\r\n    latitude: 12,\r\n    longitude: -15,\r\n  },\r\n  Guyana: {\r\n    latitude: 5,\r\n    longitude: -59,\r\n  },\r\n  Haiti: {\r\n    latitude: 19,\r\n    longitude: -72.4167,\r\n  },\r\n  \"Heard Island and McDonald Islands\": {\r\n    latitude: -53.1,\r\n    longitude: 72.5167,\r\n  },\r\n  \"Holy See\": {\r\n    latitude: 41.9,\r\n    longitude: 12.45,\r\n  },\r\n  Honduras: {\r\n    latitude: 15,\r\n    longitude: -86.5,\r\n  },\r\n  \"Hong Kong\": {\r\n    latitude: 22.25,\r\n    longitude: 114.1667,\r\n  },\r\n  Hungary: {\r\n    latitude: 47,\r\n    longitude: 20,\r\n  },\r\n  Iceland: {\r\n    latitude: 65,\r\n    longitude: -18,\r\n  },\r\n  India: {\r\n    latitude: 20,\r\n    longitude: 77,\r\n  },\r\n  Indonesia: {\r\n    latitude: -5,\r\n    longitude: 120,\r\n  },\r\n  Iran: {\r\n    latitude: 32,\r\n    longitude: 53,\r\n  },\r\n  Iraq: {\r\n    latitude: 33,\r\n    longitude: 44,\r\n  },\r\n  Ireland: {\r\n    latitude: 53,\r\n    longitude: -8,\r\n  },\r\n  \"Isle of Man\": {\r\n    latitude: 54.23,\r\n    longitude: -4.55,\r\n  },\r\n  Israel: {\r\n    latitude: 31.5,\r\n    longitude: 34.75,\r\n  },\r\n  Italy: {\r\n    latitude: 42.8333,\r\n    longitude: 12.8333,\r\n  },\r\n  \"Ivory Coast\": {\r\n    latitude: 8,\r\n    longitude: -5,\r\n  },\r\n  Jamaica: {\r\n    latitude: 18.25,\r\n    longitude: -77.5,\r\n  },\r\n  Japan: {\r\n    latitude: 36,\r\n    longitude: 138,\r\n  },\r\n  Jersey: {\r\n    latitude: 49.21,\r\n    longitude: -2.13,\r\n  },\r\n  Jordan: {\r\n    latitude: 31,\r\n    longitude: 36,\r\n  },\r\n  Kazakhstan: {\r\n    latitude: 48,\r\n    longitude: 68,\r\n  },\r\n  Kenya: {\r\n    latitude: 1,\r\n    longitude: 38,\r\n  },\r\n  Kiribati: {\r\n    latitude: 1.4167,\r\n    longitude: 173,\r\n  },\r\n  \"Korea, South\": {\r\n    latitude: 40,\r\n    longitude: 127,\r\n  },\r\n  \"Korea, North\": {\r\n    latitude: 37,\r\n    longitude: 127.5,\r\n  },\r\n  Kosovo: {\r\n    latitude: 42.602636,\r\n    longitude: 20.902977,\r\n  },\r\n  Kuwait: {\r\n    latitude: 29.3375,\r\n    longitude: 47.6581,\r\n  },\r\n  Kyrgyzstan: {\r\n    latitude: 41,\r\n    longitude: 75,\r\n  },\r\n  Laos: {\r\n    latitude: 18,\r\n    longitude: 105,\r\n  },\r\n  Latvia: {\r\n    latitude: 57,\r\n    longitude: 25,\r\n  },\r\n  Lebanon: {\r\n    latitude: 33.8333,\r\n    longitude: 35.8333,\r\n  },\r\n  Lesotho: {\r\n    latitude: -29.5,\r\n    longitude: 28.5,\r\n  },\r\n  Liberia: {\r\n    latitude: 6.5,\r\n    longitude: -9.5,\r\n  },\r\n  Libya: {\r\n    latitude: 25,\r\n    longitude: 17,\r\n  },\r\n  Liechtenstein: {\r\n    latitude: 47.1667,\r\n    longitude: 9.5333,\r\n  },\r\n  Lithuania: {\r\n    latitude: 56,\r\n    longitude: 24,\r\n  },\r\n  Luxembourg: {\r\n    latitude: 49.75,\r\n    longitude: 6.1667,\r\n  },\r\n  Macau: {\r\n    latitude: 22.1667,\r\n    longitude: 113.55,\r\n  },\r\n  \"Macedonia, the former Yugoslav Republic of\": {\r\n    latitude: 41.8333,\r\n    longitude: 22,\r\n  },\r\n  Madagascar: {\r\n    latitude: -20,\r\n    longitude: 47,\r\n  },\r\n  Malawi: {\r\n    latitude: -13.5,\r\n    longitude: 34,\r\n  },\r\n  Malaysia: {\r\n    latitude: 2.5,\r\n    longitude: 112.5,\r\n  },\r\n  Maldives: {\r\n    latitude: 3.25,\r\n    longitude: 73,\r\n  },\r\n  Mali: {\r\n    latitude: 17,\r\n    longitude: -4,\r\n  },\r\n  Malta: {\r\n    latitude: 35.8333,\r\n    longitude: 14.5833,\r\n  },\r\n  \"Marshall Islands\": {\r\n    latitude: 9,\r\n    longitude: 168,\r\n  },\r\n  Martinique: {\r\n    latitude: 14.6667,\r\n    longitude: -61,\r\n  },\r\n  Mauritania: {\r\n    latitude: 20,\r\n    longitude: -12,\r\n  },\r\n  Mauritius: {\r\n    latitude: -20.2833,\r\n    longitude: 57.55,\r\n  },\r\n  Mayotte: {\r\n    latitude: -12.8333,\r\n    longitude: 45.1667,\r\n  },\r\n  Mexico: {\r\n    latitude: 23,\r\n    longitude: -102,\r\n  },\r\n  Micronesia: {\r\n    latitude: 6.9167,\r\n    longitude: 158.25,\r\n  },\r\n  Moldova: {\r\n    latitude: 47,\r\n    longitude: 29,\r\n  },\r\n  Monaco: {\r\n    latitude: 43.7333,\r\n    longitude: 7.4,\r\n  },\r\n  Mongolia: {\r\n    latitude: 46,\r\n    longitude: 105,\r\n  },\r\n  Montenegro: {\r\n    latitude: 42,\r\n    longitude: 19,\r\n  },\r\n  Montserrat: {\r\n    latitude: 16.75,\r\n    longitude: -62.2,\r\n  },\r\n  Morocco: {\r\n    latitude: 32,\r\n    longitude: -5,\r\n  },\r\n  Mozambique: {\r\n    latitude: -18.25,\r\n    longitude: 35,\r\n  },\r\n  Myanmar: {\r\n    latitude: 22,\r\n    longitude: 98,\r\n  },\r\n  Namibia: {\r\n    latitude: -22,\r\n    longitude: 17,\r\n  },\r\n  Nauru: {\r\n    latitude: -0.5333,\r\n    longitude: 166.9167,\r\n  },\r\n  Nepal: {\r\n    latitude: 28,\r\n    longitude: 84,\r\n  },\r\n  Netherlands: {\r\n    latitude: 52.5,\r\n    longitude: 5.75,\r\n  },\r\n  \"Netherlands Antilles\": {\r\n    latitude: 12.25,\r\n    longitude: -68.75,\r\n  },\r\n  \"New Caledonia\": {\r\n    latitude: -21.5,\r\n    longitude: 165.5,\r\n  },\r\n  \"New Zealand\": {\r\n    latitude: -41,\r\n    longitude: 174,\r\n  },\r\n  Nicaragua: {\r\n    latitude: 13,\r\n    longitude: -85,\r\n  },\r\n  Niger: {\r\n    latitude: 16,\r\n    longitude: 8,\r\n  },\r\n  Nigeria: {\r\n    latitude: 10,\r\n    longitude: 8,\r\n  },\r\n  Niue: {\r\n    latitude: -19.0333,\r\n    longitude: -169.8667,\r\n  },\r\n  \"Norfolk Island\": {\r\n    latitude: -29.0333,\r\n    longitude: 167.95,\r\n  },\r\n  \"North Ireland\": {\r\n    latitude: 54.607868,\r\n    longitude: -5.926437,\r\n  },\r\n  \"North Macedonia\": {\r\n    latitude: 41.608635,\r\n    longitude: 21.745275,\r\n  },\r\n  \"Northern Mariana Islands\": {\r\n    latitude: 15.2,\r\n    longitude: 145.75,\r\n  },\r\n  Norway: {\r\n    latitude: 62,\r\n    longitude: 10,\r\n  },\r\n  Oman: {\r\n    latitude: 21,\r\n    longitude: 57,\r\n  },\r\n  Pakistan: {\r\n    latitude: 30,\r\n    longitude: 70,\r\n  },\r\n  Palau: {\r\n    latitude: 7.5,\r\n    longitude: 134.5,\r\n  },\r\n  \"Palestinian Territory, Occupied\": {\r\n    latitude: 32,\r\n    longitude: 35.25,\r\n  },\r\n  Panama: {\r\n    latitude: 9,\r\n    longitude: -80,\r\n  },\r\n  \"Papua New Guinea\": {\r\n    latitude: -6,\r\n    longitude: 147,\r\n  },\r\n  Paraguay: {\r\n    latitude: -23,\r\n    longitude: -58,\r\n  },\r\n  Peru: {\r\n    latitude: -10,\r\n    longitude: -76,\r\n  },\r\n  Philippines: {\r\n    latitude: 13,\r\n    longitude: 122,\r\n  },\r\n  Pitcairn: {\r\n    latitude: -24.7,\r\n    longitude: -127.4,\r\n  },\r\n  Poland: {\r\n    latitude: 52,\r\n    longitude: 20,\r\n  },\r\n  Portugal: {\r\n    latitude: 39.5,\r\n    longitude: -8,\r\n  },\r\n  \"Puerto Rico\": {\r\n    latitude: 18.25,\r\n    longitude: -66.5,\r\n  },\r\n  Qatar: {\r\n    latitude: 25.5,\r\n    longitude: 51.25,\r\n  },\r\n  \"R\\u00e9union\": {\r\n    latitude: -21.1,\r\n    longitude: 55.6,\r\n  },\r\n  Romania: {\r\n    latitude: 46,\r\n    longitude: 25,\r\n  },\r\n  Russia: {\r\n    latitude: 60,\r\n    longitude: 100,\r\n  },\r\n  Rwanda: {\r\n    latitude: -2,\r\n    longitude: 30,\r\n  },\r\n  \"Saint Helena, Ascension and Tristan da Cunha\": {\r\n    latitude: -15.9333,\r\n    longitude: -5.7,\r\n  },\r\n  \"Saint Kitts and Nevis\": {\r\n    latitude: 17.3333,\r\n    longitude: -62.75,\r\n  },\r\n  \"Saint Lucia\": {\r\n    latitude: 13.8833,\r\n    longitude: -61.1333,\r\n  },\r\n  \"Saint Pierre and Miquelon\": {\r\n    latitude: 46.8333,\r\n    longitude: -56.3333,\r\n  },\r\n  \"Saint Vincent and the Grenadines\": {\r\n    latitude: 13.25,\r\n    longitude: -61.2,\r\n  },\r\n  Samoa: {\r\n    latitude: -13.5833,\r\n    longitude: -172.3333,\r\n  },\r\n  \"San Marino\": {\r\n    latitude: 43.7667,\r\n    longitude: 12.4167,\r\n  },\r\n  \"Sao Tome and Principe\": {\r\n    latitude: 1,\r\n    longitude: 7,\r\n  },\r\n  \"Saudi Arabia\": {\r\n    latitude: 25,\r\n    longitude: 45,\r\n  },\r\n  Senegal: {\r\n    latitude: 14,\r\n    longitude: -14,\r\n  },\r\n  Serbia: {\r\n    latitude: 44,\r\n    longitude: 21,\r\n  },\r\n  Seychelles: {\r\n    latitude: -4.5833,\r\n    longitude: 55.6667,\r\n  },\r\n  \"Sierra Leone\": {\r\n    latitude: 8.5,\r\n    longitude: -11.5,\r\n  },\r\n  Singapore: {\r\n    latitude: 1.3667,\r\n    longitude: 103.8,\r\n  },\r\n  Slovakia: {\r\n    latitude: 48.6667,\r\n    longitude: 19.5,\r\n  },\r\n  Slovenia: {\r\n    latitude: 46,\r\n    longitude: 15,\r\n  },\r\n  \"Solomon Islands\": {\r\n    latitude: -8,\r\n    longitude: 159,\r\n  },\r\n  Somalia: {\r\n    latitude: 10,\r\n    longitude: 49,\r\n  },\r\n  \"South Africa\": {\r\n    latitude: -29,\r\n    longitude: 24,\r\n  },\r\n  \"South Georgia and the South Sandwich Islands\": {\r\n    latitude: -54.5,\r\n    longitude: -37,\r\n  },\r\n  Spain: {\r\n    latitude: 40,\r\n    longitude: -4,\r\n  },\r\n  \"Sri Lanka\": {\r\n    latitude: 7,\r\n    longitude: 81,\r\n  },\r\n  Sudan: {\r\n    latitude: 15,\r\n    longitude: 30,\r\n  },\r\n  Suriname: {\r\n    latitude: 4,\r\n    longitude: -56,\r\n  },\r\n  \"Svalbard and Jan Mayen\": {\r\n    latitude: 78,\r\n    longitude: 20,\r\n  },\r\n  Swaziland: {\r\n    latitude: -26.5,\r\n    longitude: 31.5,\r\n  },\r\n  Sweden: {\r\n    latitude: 62,\r\n    longitude: 15,\r\n  },\r\n  Switzerland: {\r\n    latitude: 47,\r\n    longitude: 8,\r\n  },\r\n  Syria: {\r\n    latitude: 35,\r\n    longitude: 38,\r\n  },\r\n  Taiwan: {\r\n    latitude: 23.5,\r\n    longitude: 121,\r\n  },\r\n  Tajikistan: {\r\n    latitude: 39,\r\n    longitude: 71,\r\n  },\r\n  Tanzania: {\r\n    latitude: -6,\r\n    longitude: 35,\r\n  },\r\n  Thailand: {\r\n    latitude: 15,\r\n    longitude: 100,\r\n  },\r\n  \"Timor-Leste\": {\r\n    latitude: -8.55,\r\n    longitude: 125.5167,\r\n  },\r\n  Togo: {\r\n    latitude: 8,\r\n    longitude: 1.1667,\r\n  },\r\n  Tokelau: {\r\n    latitude: -9,\r\n    longitude: -172,\r\n  },\r\n  Tonga: {\r\n    latitude: -20,\r\n    longitude: -175,\r\n  },\r\n  \"Trinidad and Tobago\": {\r\n    latitude: 11,\r\n    longitude: -61,\r\n  },\r\n  Tunisia: {\r\n    latitude: 34,\r\n    longitude: 9,\r\n  },\r\n  Turkey: {\r\n    latitude: 39,\r\n    longitude: 35,\r\n  },\r\n  Turkmenistan: {\r\n    latitude: 40,\r\n    longitude: 60,\r\n  },\r\n  \"Turks and Caicos Islands\": {\r\n    latitude: 21.75,\r\n    longitude: -71.5833,\r\n  },\r\n  Tuvalu: {\r\n    latitude: -8,\r\n    longitude: 178,\r\n  },\r\n  Uganda: {\r\n    latitude: 1,\r\n    longitude: 32,\r\n  },\r\n  Ukraine: {\r\n    latitude: 49,\r\n    longitude: 32,\r\n  },\r\n  \"United Arab Emirates\": {\r\n    latitude: 24,\r\n    longitude: 54,\r\n  },\r\n  \"United Kingdom\": {\r\n    latitude: 54,\r\n    longitude: -2,\r\n  },\r\n  \"United States\": {\r\n    latitude: 38,\r\n    longitude: -97,\r\n  },\r\n  \"United States Minor Outlying Islands\": {\r\n    latitude: 19.2833,\r\n    longitude: 166.6,\r\n  },\r\n  Uruguay: {\r\n    latitude: -33,\r\n    longitude: -56,\r\n  },\r\n  Uzbekistan: {\r\n    latitude: 41,\r\n    longitude: 64,\r\n  },\r\n  Vanuatu: {\r\n    latitude: -16,\r\n    longitude: 167,\r\n  },\r\n  Venezuela: {\r\n    latitude: 8,\r\n    longitude: -66,\r\n  },\r\n  Vietnam: {\r\n    latitude: 16,\r\n    longitude: 106,\r\n  },\r\n  \"Virgin Islands, British\": {\r\n    latitude: 18.5,\r\n    longitude: -64.5,\r\n  },\r\n  \"Virgin Islands, U.S.\": {\r\n    latitude: 18.3333,\r\n    longitude: -64.8333,\r\n  },\r\n  \"Wallis and Futuna\": {\r\n    latitude: -13.3,\r\n    longitude: -176.2,\r\n  },\r\n  \"Western Sahara\": {\r\n    latitude: 24.5,\r\n    longitude: -13,\r\n  },\r\n  Yemen: {\r\n    latitude: 15,\r\n    longitude: 48,\r\n  },\r\n  Zambia: {\r\n    latitude: -15,\r\n    longitude: 30,\r\n  },\r\n  Zimbabwe: {\r\n    latitude: -20,\r\n    longitude: 30,\r\n  },\r\n  Afghanistan: {\r\n    latitude: 33,\r\n    longitude: 65,\r\n  },\r\n};\r\n export default countryCoordinates","const stateCoordinates = {\r\n  Alaska: {\r\n    latitude: 61.385,\r\n    longitude: -152.2683,\r\n  },\r\n  Alabama: {\r\n    latitude: 32.799,\r\n    longitude: -86.8073,\r\n  },\r\n  Arkansas: {\r\n    latitude: 34.9513,\r\n    longitude: -92.3809,\r\n  },\r\n  Arizona: {\r\n    latitude: 33.7712,\r\n    longitude: -111.3877,\r\n  },\r\n  California: {\r\n    latitude: 36.17,\r\n    longitude: -119.7462,\r\n  },\r\n  Colorado: {\r\n    latitude: 39.0646,\r\n    longitude: -105.3272,\r\n  },\r\n  Connecticut: {\r\n    latitude: 41.5834,\r\n    longitude: -72.7622,\r\n  },\r\n  Delaware: {\r\n    latitude: 39.3498,\r\n    longitude: -75.5148,\r\n  },\r\n  Florida: {\r\n    latitude: 27.8333,\r\n    longitude: -81.717,\r\n  },\r\n  Georgia: {\r\n    latitude: 32.9866,\r\n    longitude: -83.6487,\r\n  },\r\n  Hawaii: {\r\n    latitude: 21.1098,\r\n    longitude: -157.5311,\r\n  },\r\n  Iowa: {\r\n    latitude: 42.0046,\r\n    longitude: -93.214,\r\n  },\r\n  Idaho: {\r\n    latitude: 44.2394,\r\n    longitude: -114.5103,\r\n  },\r\n  Illinois: {\r\n    latitude: 40.3363,\r\n    longitude: -89.0022,\r\n  },\r\n  Indiana: {\r\n    latitude: 39.8647,\r\n    longitude: -86.2604,\r\n  },\r\n  Kansas: {\r\n    latitude: 38.5111,\r\n    longitude: -96.8005,\r\n  },\r\n  Kentucky: {\r\n    latitude: 37.669,\r\n    longitude: -84.6514,\r\n  },\r\n  Louisiana: {\r\n    latitude: 31.1801,\r\n    longitude: -91.8749,\r\n  },\r\n  Massachusetts: {\r\n    latitude: 42.2373,\r\n    longitude: -71.5314,\r\n  },\r\n  Maryland: {\r\n    latitude: 39.0724,\r\n    longitude: -76.7902,\r\n  },\r\n  Maine: {\r\n    latitude: 44.6074,\r\n    longitude: -69.3977,\r\n  },\r\n  Michigan: {\r\n    latitude: 43.3504,\r\n    longitude: -84.5603,\r\n  },\r\n  Minnesota: {\r\n    latitude: 45.7326,\r\n    longitude: -93.9196,\r\n  },\r\n  Missouri: {\r\n    latitude: 38.4623,\r\n    longitude: -92.302,\r\n  },\r\n  Mississippi: {\r\n    latitude: 32.7673,\r\n    longitude: -89.6812,\r\n  },\r\n  Montana: {\r\n    latitude: 46.9048,\r\n    longitude: -110.3261,\r\n  },\r\n  \"North Carolina\": {\r\n    latitude: 35.6411,\r\n    longitude: -79.8431,\r\n  },\r\n  \"North Dakota\": {\r\n    latitude: 47.5362,\r\n    longitude: -99.793,\r\n  },\r\n  Nebraska: {\r\n    latitude: 41.1289,\r\n    longitude: -98.2883,\r\n  },\r\n  \"New Hampshire\": {\r\n    latitude: 43.4108,\r\n    longitude: -71.5653,\r\n  },\r\n  \"New Jersey\": {\r\n    latitude: 40.314,\r\n    longitude: -74.5089,\r\n  },\r\n  \"New Mexico\": {\r\n    latitude: 34.8375,\r\n    longitude: -106.2371,\r\n  },\r\n  Nevada: {\r\n    latitude: 38.4199,\r\n    longitude: -117.1219,\r\n  },\r\n  \"New York\": {\r\n    latitude: 42.1497,\r\n    longitude: -74.9384,\r\n  },\r\n  Ohio: {\r\n    latitude: 40.3736,\r\n    longitude: -82.7755,\r\n  },\r\n  Oklahoma: {\r\n    latitude: 35.5376,\r\n    longitude: -96.9247,\r\n  },\r\n  Oregon: {\r\n    latitude: 44.5672,\r\n    longitude: -122.1269,\r\n  },\r\n  Pennsylvania: {\r\n    latitude: 40.5773,\r\n    longitude: -77.264,\r\n  },\r\n  \"Rhode Island\": {\r\n    latitude: 41.6772,\r\n    longitude: -71.5101,\r\n  },\r\n  \"South Carolina\": {\r\n    latitude: 33.8191,\r\n    longitude: -80.9066,\r\n  },\r\n  \"South Dakota\": {\r\n    latitude: 44.2853,\r\n    longitude: -99.4632,\r\n  },\r\n  Tennessee: {\r\n    latitude: 35.7449,\r\n    longitude: -86.7489,\r\n  },\r\n  Texas: {\r\n    latitude: 31.106,\r\n    longitude: -97.6475,\r\n  },\r\n  Utah: {\r\n    latitude: 40.1135,\r\n    longitude: -111.8535,\r\n  },\r\n  Virginia: {\r\n    latitude: 37.768,\r\n    longitude: -78.2057,\r\n  },\r\n  Vermont: {\r\n    latitude: 44.0407,\r\n    longitude: -72.7093,\r\n  },\r\n  Washington: {\r\n    latitude: 47.3917,\r\n    longitude: -121.5708,\r\n  },\r\n  Wisconsin: {\r\n    latitude: 44.2563,\r\n    longitude: -89.6385,\r\n  },\r\n  \"West Virginia\": {\r\n    latitude: 38.468,\r\n    longitude: -80.9696,\r\n  },\r\n  Wyoming: {\r\n    latitude: 42.7475,\r\n    longitude: -107.2085,\r\n  },\r\n  \"District of Columbia\": {\r\n    latitude: 38.8974,\r\n    longitude: -77.0268,\r\n  },\r\n  \"Puerto Rico\": {\r\n    latitude: 18.2491,\r\n    longitude: -66.628,\r\n  },\r\n};\r\n\r\nexport default stateCoordinates","import { expose } from 'comlink'\r\nimport countryCoordinates from '../countryCoordinates'\r\nimport stateCoordinates from '../stateCoordinates'\r\n/**\r\n * Create an object where the keys are dates and the values are arrays containing COVID\r\n * data for that date from around the world\r\n *\r\n * @param {string} _date Date string in format \"MM-DD-YYYY\"\r\n * @param {Object.<string, Object[]} _rawData\r\n * @returns object {'MM-DD-YYYY': [data objects]}\r\n */\r\nconst scrubData = rawData => {\r\n  const EXCLUDED_REGIONS = [\r\n    'diamond princess',\r\n    'grand princess',\r\n    'cruise ship',\r\n    'port quarantine',\r\n    'ms zaandam',\r\n    'summer olympics 2020',\r\n    'recovered',\r\n    'unknown',\r\n    'others'\r\n  ]\r\n  let fieldNames = {\r\n    countryRegion: null,\r\n    provinceState: null,\r\n    latitude: null,\r\n    longitude: null\r\n  }\r\n\r\n  let dataChunk = []\r\n\r\n  rawData.forEach(rawDatum => {\r\n    let _date = rawDatum.meta.arg\r\n    let _data = rawDatum.payload\r\n    const numberOfFields = Object.keys(_data[0]).length\r\n    // ACCOMODATE FOR DIFFERENT FIELD NAMES IN FIRST FEW CSV FILES\r\n    if (numberOfFields <= 8) {\r\n      fieldNames.countryRegion = 'Country/Region'\r\n      fieldNames.provinceState = 'Province/State'\r\n      fieldNames.latitude = 'Latitude'\r\n      fieldNames.longitude = 'Longitude'\r\n    } else {\r\n      fieldNames.countryRegion = 'Country_Region'\r\n      fieldNames.provinceState = 'Province_State'\r\n      fieldNames.latitude = 'Lat'\r\n      fieldNames.longitude = 'Long_'\r\n    }\r\n\r\n    let countryRegionFieldName = fieldNames.countryRegion\r\n    let provinceStateFieldName = fieldNames.provinceState\r\n\r\n    let newDateData = []\r\n    _data.forEach(dataRow => {\r\n      // if (!dataRow[countryRegionFieldName]) {\r\n      //   console.log(countryRegionFieldName, dataRow);\r\n      // }\r\n\r\n      if (\r\n        !EXCLUDED_REGIONS.includes(\r\n          dataRow[countryRegionFieldName].toLowerCase()\r\n        )\r\n      ) {\r\n        let countryRegion = ''\r\n\r\n        // DETERMINE THE COUNTRY/REGION NAME\r\n        switch (dataRow[countryRegionFieldName]) {\r\n          case 'US':\r\n            countryRegion = 'United States'\r\n            break\r\n          case 'UK':\r\n            countryRegion = 'United Kingdom'\r\n            break\r\n          case 'Taiwan*':\r\n            countryRegion = 'Taiwan'\r\n            break\r\n          case 'Mainland China':\r\n            countryRegion = 'China'\r\n            break\r\n          case 'Iran (Islamic Republic of)':\r\n            countryRegion = 'Iran'\r\n            break\r\n          default:\r\n            countryRegion = dataRow[countryRegionFieldName].trim()\r\n        }\r\n\r\n        // PROVINCE/STATE NAME\r\n        let provinceState = dataRow[provinceStateFieldName]\r\n\r\n        if (provinceState !== null) {\r\n          provinceState = provinceState.trim()\r\n        }\r\n\r\n        // DETERMINE COORDINATES FOR DATUM\r\n        // IF LAT/LONG ARE EMPTY, ASSIGN VALUES\r\n        // FOR STATE OR COUNTRY INSTEAD\r\n        let coordinates\r\n        if (!dataRow.Lat || !dataRow.Long_) {\r\n          // USE COORDINATES FOR STATE/PROVINCE, IF EXISTENT\r\n          if (\r\n            Object.keys(stateCoordinates).includes(\r\n              dataRow[provinceStateFieldName]\r\n            )\r\n          ) {\r\n            coordinates = stateCoordinates[dataRow[provinceStateFieldName]]\r\n          } else {\r\n            // USE COUNTRY/REGION FOR DATA WITH NO STATE/PROVINCE\r\n            if (countryRegion === 'South Korea') {\r\n              coordinates = countryCoordinates['Korea, South']\r\n            } else {\r\n              coordinates = countryCoordinates[countryRegion]\r\n            }\r\n          }\r\n        } else {\r\n          // IF DATUM HAS COORDINATES, USE THEM\r\n          coordinates = { latitude: dataRow.Lat, longitude: dataRow.Long_ }\r\n        }\r\n\r\n        // if (coordinates === undefined) {\r\n        //   console.log(dataRow);\r\n        // }\r\n\r\n        let county = dataRow.Admin2\r\n\r\n        newDateData.push({\r\n          date: _date,\r\n          countryRegion,\r\n          provinceState,\r\n          county,\r\n          coordinates,\r\n          confirmed: dataRow.Confirmed,\r\n          deaths: dataRow.Deaths,\r\n          active: dataRow.Active,\r\n          recovered: dataRow.Recovered\r\n        })\r\n      }\r\n    })\r\n\r\n    dataChunk.push(newDateData)\r\n  })\r\n  return dataChunk\r\n}\r\n\r\nexpose({\r\n  countryCoordinates,\r\n  stateCoordinates,\r\n  scrubData\r\n})\r\n"],"sourceRoot":""}