{"version":3,"sources":["App.js","index.js"],"names":["App","useState","lat","lng","currentSize","targetSize","size","index","markers","setMarkers","coords","useEffect","sizes","animationRef","useRef","prevTime","current","requestAnimationFrame","changeSize","currentTime","console","log","Object","keys","map","key","length","marker","cancelAnimationFrame","className","setDefaultOptions","css","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAyEeA,MArEf,WACE,MAA8BC,mBAAS,CACrC,EAAG,CACDC,KAAM,SACNC,IAAK,QACLC,YAAa,GACbC,WAAY,CACVC,KAAM,GACNC,MAAO,MAPb,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,EAA4BR,mBAAS,CACnCC,KAAM,SACNC,IAAK,UAFP,mBAAOO,EAAP,UAIAC,qBAAU,cAAU,CAACD,IAErB,IAAME,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAChDC,EAAeC,mBA0CnB,OAtBAH,qBAAU,WACR,IAAII,EAAW,EAWf,OADAF,EAAaG,QAAUC,uBATJ,SAAbC,EAAcC,KACbJ,GAAYI,EAAcJ,GAAY,OACzCK,QAAQC,IAAIF,GACZJ,EAAWI,EAtBfG,OAAOC,KAAKf,GAASgB,KAAI,SAACC,GACxB,GAAIjB,EAAQiB,GAAKpB,WAAWE,MAAQK,EAAMc,OAAQ,CAChD,IAAIC,EAASnB,EAAQiB,GACrBhB,EAAW,2BACND,GADK,IAER,EAAE,2BACGmB,GADL,IAEItB,WAAY,CACZE,QAASoB,EAAOpB,MAChBD,KAAMM,EAAMe,EAAOpB,MAAQ,cAgBnCM,EAAaG,QAAUC,sBAAsBC,MAIxC,kBAAMU,qBAAqBf,EAAaG,YAC9C,IAIHL,qBAAU,cAER,IAIA,qBAAKkB,UAAU,S,OC7DnBC,4BAAkB,CAAEC,KAAK,IAEzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2283883e.chunk.js","sourcesContent":["import \"./App.css\";\r\n\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction App() {\r\n  const [markers, setMarkers] = useState({\r\n    0: {\r\n      lat: -125.4443,\r\n      lng: 47.2529,\r\n      currentSize: 10,\r\n      targetSize: {\r\n        size: 10,\r\n        index: 0,\r\n      },\r\n    },\r\n  });\r\n\r\n  const [coords, setCoords] = useState({\r\n    lat: -122.4443,\r\n    lng: 47.2529,\r\n  });\r\n  useEffect(() => {}, [coords]);\r\n\r\n  const sizes = [20, 30, 40, 50, 60, 70, 80, 90, 100, 110];\r\n  let animationRef = useRef();\r\n\r\n  const updateMarkers = () => {\r\n    Object.keys(markers).map((key) => {\r\n      if (markers[key].targetSize.index < sizes.length) {\r\n        let marker = markers[key];\r\n        setMarkers({\r\n          ...markers,\r\n          0: {\r\n            ...marker,\r\n              targetSize: {\r\n              index: ++marker.index,\r\n              size: sizes[marker.index + 1],\r\n            },\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let prevTime = 0;\r\n    const changeSize = (currentTime) => {\r\n      if (!prevTime || currentTime - prevTime >= 1000) {\r\n        console.log(currentTime);\r\n        prevTime = currentTime;\r\n        updateMarkers();\r\n      }\r\n      animationRef.current = requestAnimationFrame(changeSize);\r\n    };\r\n\r\n    animationRef.current = requestAnimationFrame(changeSize);\r\n    return () => cancelAnimationFrame(animationRef.current);\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    const graphics = []\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { setDefaultOptions } from \"esri-loader\";\r\n\r\nsetDefaultOptions({ css: true });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}